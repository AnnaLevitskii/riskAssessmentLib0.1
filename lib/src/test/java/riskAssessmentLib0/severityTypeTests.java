/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package riskAssessmentLib0;

import org.testng.Assert;
import org.testng.annotations.*;

public class severityTypeTests {

    @Test
    public void severityTypeTest_numToType_positive(){
        Assert.assertEquals(SeverityType.getSeverityType(0.0), SeverityType.MINOR);
        Assert.assertEquals(SeverityType.getSeverityType(0.25), SeverityType.MINOR);
        Assert.assertEquals(SeverityType.getSeverityType(0.26), SeverityType.MAJOR);
        Assert.assertEquals(SeverityType.getSeverityType(0.5), SeverityType.MAJOR);
        Assert.assertEquals(SeverityType.getSeverityType(0.55), SeverityType.CRITICAL);
        Assert.assertEquals(SeverityType.getSeverityType(0.75), SeverityType.CRITICAL);
        Assert.assertEquals(SeverityType.getSeverityType(0.76), SeverityType.BLOCKER);
        Assert.assertEquals(SeverityType.getSeverityType(1.0), SeverityType.BLOCKER);

        System.out.println(SeverityType.MAJOR.getVal());

    }
    @Test(expectedExceptions = RuntimeException.class)
    public void severityTypeTest_numToType_negative(){
        Assert.assertEquals(SeverityType.getSeverityType(-0.01), SeverityType.MINOR);
        Assert.assertEquals(SeverityType.getSeverityType(1.01), SeverityType.BLOCKER);
        Assert.assertEquals(SeverityType.getSeverityType(null), SeverityType.BLOCKER);
    }

    @Test
    public void severityTypeTest_typeToNum_positive(){
        Assert.assertEquals(SeverityType.MINOR.getVal(), 0.25);
        Assert.assertEquals(SeverityType.MAJOR.getVal(), 0.5);
        Assert.assertEquals(SeverityType.CRITICAL.getVal(), 0.75);
        Assert.assertEquals(SeverityType.BLOCKER.getVal(), 1.0);
    }






}
